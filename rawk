#!/bin/sh
# .:[ rawk - rage against web frameworks ]:.
# 
# generates a static content from a tree of markdown files and other content
# originally written by 4096r/b7b720d6  "kyle isom <coder@kyleisom.net>"
# based on the suckless webframework (sw) by nibblesec
# 
# released as public domain software - for curiosity's sake, i'd be interested 
# in hearing if you take this and tinker with it, though you are far from 
# obligated to do so.
# 
# in the event your locale's public domain laws are more restrictive than the 
# ISC license, this code is licensed under the ISC license. 

conf_file="rawkrc"
site_root="/"

usage() {
    echo "usage: $0 <source dir>"
    #exit 0
}

# $1->filename $2->template
rawk_template() {
    # Following script reads substitutions from stdin
    awk '
	function get_ex(t) { RS="[ \t]+"; getline t < "-"; RS="\n"; return t }
	BEGIN { while (getline su["\\$\\{" get_ex() "\\}"] < "-" != 1); }
	BEGIN { su["\\$\\{date\\}"] = strftime() } # Date
	BEGIN { sub(/\.[^.]*$/, "", su["\\$\\{page_title\\}"]) } # Fix title
	{ for (v in su) gsub(v, su[v]); print } # Apply substitutions and print
    ' "$2" <<-!
	title		$site_title
	subtitle	$site_subtitle
	site_root	$site_root
	root_link	${site_root}index.html
	page_title	${1##*/}
	!
}

rawk_submenu() {
    fbase="$(echo ${1##*/} | sed -e 's|\(.*\)\..[[:alnum:]]*|\1|')"
    fc=""
    file_list=""

    # add cwd
    echo '<div id="side-bar">'
    echo '<a href="index.html">.</a> '

    # parent
    if [ "${1%/*}" != "." ]; then
        echo '<a href="../index.html">..</a> '
    fi

    for filter in $bl
    do
        fc="$fc | grep -ve '$filter'"
    done
    
    file_list="$(eval ls -1 $(echo ${1%/*}) $fc | sed -e 's/\.md\([ ]*\)/\.html\1/g' | uniq)"
    file_list="$(echo \"$file_list\" | sort | xargs)"
    for file in $file_list
    do
        printf "\n <a href=\"$(basename $file | sed -e 's/\.md$/\.html/g')\">"
        printf "$(basename $file | sed -e 's/\(..*\)\.[[:alnum:]]*/\1/')"
        printf "</a> "
    done
    printf "\n</div>\n"
}


rawk_page() {
    rawk_template $1 $hdr_tpl
    rawk_submenu $1
    
    echo '<div id="main">'
    if [ -n "$uname_comment" ]; then
	cat <<-!

		<!-- page build stats: -->
		<!-- os: $(uname -rms) -->
		<!-- generated on $(date) -->

	!
    fi
    $mdparser $1
    echo '</div>'

    rawk_template $1 $ftr_tpl
}

rawk_main () {
    # check to see which arguments we got
    # if we got any, rename them for clarity
    if [ -n "$1" ]; then
        src_dir="$1"
    elif [ -n "$2" ]; then 
        target="$2"
    fi

    # at a minimum, require a source directory
    if [ -z "${src_dir}" ]; then
        usage
    elif [ -z "${target}" ]; then
        # sane default
        target="$(pwd)/${src_dir##*/}.build"
    fi

    mkdir -p "$target"

    # copy over target dir
    cp -r ${src_dir}/* ${target}/
    cd ${target}

    mkdir -p styles
    cp "$stylesheet" styles/style.css

    # here's where we need to load in the list of files
    # and convert md->html
    find -iname \*.md -print0 |
    while read -d '' src_f
    do
        out_f="${src_f%.[Mm][Dd]}.html"
        echo "* $src_f -> $out_f"
        rawk_page "$src_f" > "$out_f"
        rm "$src_f"
    done
}

# main()
# source config file and check valid targets and source dirs
. ./$conf_file
hdr_tpl="$(pwd)/$hdr_tpl"
ftr_tpl="$(pwd)/$ftr_tpl"

rawk_main $@

# fin
